<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2018. Center for Open Science

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- Uses a memory map to prevent successive failed login attempts for a particular username from the same IP address. -->
    <bean id="loginRateLimiting"
          class="org.jasig.cas.web.support.InMemoryThrottledSubmissionByIpAddressAndUsernameHandlerInterceptorAdapter"
          p:failureRangeInSeconds="${cas.rateLimiting.failureRangeInSeconds}"
          p:failureThreshold="${cas.rateLimiting.failureThreshold}"
          p:usernameParameter="${cas.rateLimiting.usernameParameter}"
    />

    <!-- A scheduled task that periodically cleans up state to allow the login rate limiting throttle to relax. -->
    <bean id="loginRateLimitingJobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
          p:targetObject-ref="loginRateLimiting"
          p:targetMethod="decrementCounts"
    />

    <!-- A independent scheduler that runs the above clean-up tasks. -->
    <bean id="loginRateLimitingTrigger"
          class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean"
          p:jobDetail-ref="loginRateLimitingJobDetail"
          p:startDelay="${cas.rateLimiting.startDelay}"
          p:repeatInterval="${cas.rateLimiting.repeatInterval}"
    />
</beans>
